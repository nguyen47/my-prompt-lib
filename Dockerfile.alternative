# Alternative Dockerfile using Ubuntu base for easier better-sqlite3 compilation
FROM node:20-bullseye-slim AS base

# Install dependencies only when needed
FROM base AS deps
# Install build dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    build-essential \
    sqlite3 \
    libsqlite3-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install all dependencies (including dev dependencies needed for build)
COPY package.json package-lock.json* ./
RUN npm ci

# Install production dependencies only
FROM base AS prod-deps
RUN apt-get update && apt-get install -y \
    python3 \
    build-essential \
    sqlite3 \
    libsqlite3-dev \
    && rm -rf /var/lib/apt/lists/*
WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm ci --omit=dev && npm cache clean --force

# Rebuild the source code only when needed
FROM base AS builder
# Install build dependencies for the builder stage
RUN apt-get update && apt-get install -y \
    python3 \
    build-essential \
    sqlite3 \
    libsqlite3-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Create data directory for SQLite database
RUN mkdir -p data

# Build the application
RUN npm run build

# Production image, copy all the files and run next
FROM base AS runner
# Install only SQLite runtime
RUN apt-get update && apt-get install -y \
    sqlite3 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Create a non-root user to run the application
RUN groupadd --system --gid 1001 nodejs
RUN useradd --system --uid 1001 --gid nodejs nextjs

# Copy the public folder from the project as this is not included in the build
COPY --from=builder /app/public ./public

# Create data directory and set permissions
RUN mkdir -p data && chown nextjs:nodejs data

# Copy production node_modules
COPY --from=prod-deps --chown=nextjs:nodejs /app/node_modules ./node_modules

# Automatically leverage output traces to reduce image size
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

CMD ["node", "server.js"]
